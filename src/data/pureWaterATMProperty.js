import { interpolate, parseData } from './utils'
const fieldName = [
  'temperature',
  'density',
  'dynamicViscosity',
  'specificHeat',
  'thermalConductivity',
  'prandltNumber',
  'volumnExpansionCoeff',
  'soundSpeed',
  'superficialTension',
]
const raw = `
5,1000,0.001519,4200,0.5576,11.44,0.00001135,1426,0.07494
10,999.7,0.001307,4188,0.5674,9.642,0.00008743,1448,0.07422
15,999.1,0.001138,4184,0.5769,8.253,0.0001523,1467,0.07348
20,998.2,0.001002,4183,0.5861,7.152,0.000209,1483,0.07273
25,997.1,0.0008905,4183,0.5948,6.263,0.0002594,1497,0.07197
30,995.7,0.0007977,4183,0.603,5.534,0.0003051,1509,0.07119
35,994,0.0007196,4183,0.6107,4.929,0.000347,1520,0.0704
40,992.2,0.0006533,4182,0.6178,4.422,0.0003859,1528,0.06959
45,990.2,0.0005963,4182,0.6244,3.994,0.0004225,1534,0.06877
50,988,0.0005471,4181,0.6305,3.628,0.0004572,1537,0.06794
55,985.7,0.0005042,4182,0.636,3.315,0.0004903,1538,0.0671
60,983.2,0.0004666,4183,0.641,3.045,0.0005221,1537,0.06624
65,980.6,0.0004334,4184,0.6455,2.81,0.0005528,1534,0.06536
70,977.8,0.000404,4187,0.6495,2.605,0.0005827,1529,0.06448
75,974.9,0.0003779,4190,0.653,2.425,0.0006118,1523,0.06358
80,971.8,0.0003545,4194,0.6562,2.266,0.0006402,1514,0.06267
85,968.6,0.0003335,4199,0.6589,2.125,0.0006682,1504,0.06175
90,965.3,0.0003145,4204,0.6613,2,0.0006958,1491,0.06081
95,961.9,0.0002974,4210,0.6634,1.888,0.000723,1475,0.05987
100,0.5896,0.00001227,2042,0.02506,0.9996,0.002881,472.8,0.05891
`
const parsedData = parseData(raw, fieldName)
const nanData = fieldName.reduce((a, v) => ((a[v] = NaN), a), { pressure: NaN })
const getData = (temperature) => {
  const index = parsedData.findIndex((o) => o.temperature >= temperature)
  const r1 = parsedData[index - 1]
  const r2 = parsedData[index]
  if (!r1) return nanData
  const diff =
    (temperature - r1.temperature) / (r2.temperature - r1.temperature)
  if (diff > 1) return r1
  return { ...interpolate(r1, r2, diff), pressure: 101325 }
}
export default getData
